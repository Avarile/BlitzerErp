{"version":3,"file":"static/js/456.e5563838.chunk.js","mappings":"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","sources":["components/warehousing/DepositeIntoWarehouseForm.tsx","components/warehousing/CreateNewProducts.tsx","Hooks/useDebounce.tsx","components/warehousing/AbolishProducts.tsx","pages/warehouseing-inbound.tsx","utils/productTypes.ts"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, InputNumber, Button, FormInstance, Select } from \"antd\";\nimport Request from \"@DATA/api.controller\";\nimport qs from \"query-string\";\nimport { refineQueryString, QueryStringType } from \"@SRC/utils/utilFuncs\";\nimport { getProductDataDeposits, putProductData } from \"@DATA/api.service\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    email: \"${label} is not a valid email!\",\n    number: \"${label} is not a valid number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n/* eslint-enable no-template-curly-in-string */\n\nconst WarehousingDepositeForm = () => {\n  // useRef example usage as  refering an instance of a component\n  // 1st step: create a ref\n  const ref = useRef<FormInstance<any> | null>();\n  const currentProductRef = useRef({}); // store the specific product when selected product is back from server\n  const [isloading, setIsloading] = React.useState(false);\n\n  const onFinish = (values: any) => {};\n\n  const [products, setProducts] = useState<any>([]);\n  const [searchParams, setSearchParams] = useState<QueryStringType>({\n    name: \"\",\n    sku: \"\",\n  });\n\n  // 生命周期hook执行，切记不是事件执行，依赖为啥叫依赖而不是监听源头，不是事件驱动的。\n  useEffect(() => {\n    getProductDataDeposits().then((response) => {\n      setProducts(response);\n    });\n  }, []);\n\n  return (\n    <Form\n      initialValues={{}}\n      {...layout}\n      name=\"nest-messages\"\n      onFinish={onFinish}\n      // validateMessages={validateMessages}\n      style={{ flex: 1 }} // flex: 1 的作用\n      //ref need to receive a instance of a component using a function to pass it into the current state of the ref.\n      ref={(formInstance: FormInstance<any> | null) => {\n        ref.current = formInstance;\n      }}>\n      <Form.Item label=\"Product Name\" style={{ marginBottom: 0 }}>\n        <Form.Item\n          name={[\"product\", \"productName\"]}\n          rules={[{ required: true }]}\n          style={{\n            display: \"inline-block\",\n            width: \"calc(50% - 8px)\",\n            paddingRight: \"5px\",\n          }}>\n          <Input\n            onChange={() => {\n              let currentFormValue = ref.current?.getFieldValue(\"product\");\n              let queryData = {\n                name: currentFormValue.productName,\n              };\n              getProductDataDeposits(queryData).then((response: any) => {\n                const { currentInStock, sku, updateLog } = response?.[0] || {};\n                currentProductRef.current = response?.[0]; // store the currentProduct in the ref\n                // set FormFields\n                ref.current?.setFieldsValue({\n                  product: {\n                    ...currentFormValue,\n                    productSku: sku,\n                    productDescription: updateLog,\n                    productQuantityAdd: 0,\n                    productQuantityInstock: currentInStock,\n                  },\n                });\n              });\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item name={[\"product\", \"productSku\"]} style={{ display: \"inline-block\", width: \"calc(50% - 8px)\" }}>\n          <Select\n            placeholder=\"Select Product\"\n            onChange={() => {\n              // 当select数据变化时，获得form表单的product的数据\n              let currentFormValue = ref.current?.getFieldValue(\"product\");\n              let queryData = {\n                sku: currentFormValue.productSku,\n              };\n              // 根据选择项的数据，进行请求\n              getProductDataDeposits(queryData)\n                .then((response: any) => {\n                  currentProductRef.current = response?.[0]; // store the currentProduct in the ref\n                  const { name, currentInStock, sku, updateLog } = response?.[0] || {};\n                  // 设置表单数据\n                  // setFieldsValue是底层包装了state，确保了表单刷新\n                  // 但是，setFieldsValue并不会引发当前组件的刷新\n                  // 表单是子组件\n                  // 子组件刷新不会引发父组件刷新\n                  // 当前组件是父组件，表单是子组件\n                  // setFieldsValue触发了表单的数显，即子组件的刷新，确保了表单项目显示正确\n                  // 当前组件不会刷新，也就不会出发useEffect\n                  ref.current?.setFieldsValue({\n                    product: {\n                      ...currentFormValue,\n                      productName: name,\n                      productQuantityInstock: currentInStock,\n                      productDescription: updateLog,\n                      productQuantityAdd: 0,\n                    },\n                  });\n                })\n                .catch((error: any) => {\n                  throw new Error(error);\n                });\n            }}>\n            {products.map((product: any) => {\n              return (\n                <Select.Option value={product.sku} key={product.id}>\n                  {product.sku}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productSku\"]}\n        label=\"SKU\"\n        rules={[\n          {\n            required: false,\n            message: \"must provide products SKU\",\n          },\n        ]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productQuantityAdd\"]}\n        label=\"Quantity Addition\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productQuantityInstock\"]}\n        label=\"Quantity inStock\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n            max: 99999,\n          },\n        ]}>\n        <InputNumber disabled={true} />\n      </Form.Item>\n      <Form.Item name={[\"product\", \"productDescription\"]} label=\"Description\">\n        <Input.TextArea style={{ minHeight: \"20rem\", maxHeight: \"25rem\" }} />\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button\n          loading={isloading}\n          type=\"primary\"\n          // htmlType=\"submit\"\n          block\n          style={{ marginBottom: \"1rem\" }}\n          onClick={() => {\n            setIsloading(true);\n            setTimeout(() => {\n              let { productQuantityAdd, productDescription } = ref.current?.getFieldValue(\"product\");\n\n              const currentProduct = currentProductRef.current as any;\n              const targetId = currentProduct.id;\n              const payloadProduct = {\n                ...currentProduct,\n                currentInStock: currentProduct.currentInStock + productQuantityAdd,\n                updateLog: productDescription,\n              };\n              putProductData(targetId, payloadProduct).then((response: any) => {\n                if (response.id) {\n                }\n              });\n              setIsloading(false);\n              ref.current?.resetFields();\n            }, 2000);\n          }}>\n          Submit\n        </Button>\n        <Button\n          onClick={() => {\n            ref.current?.resetFields();\n          }}\n          block>\n          Reset Form\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default WarehousingDepositeForm;\nfunction getProductDataDeposit() {\n  throw new Error(\"Function not implemented.\");\n}\n","import React, { useRef } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, InputNumber, Button, FormInstance, Select, notification } from \"antd\";\nimport Request from \"@DATA/api.controller\";\nimport envSwitch from \"@SRC/utils/ENVCONFIG\";\nimport { details, subType, productTypes } from \"@SRC/utils/productTypes\";\nimport { timeStamp } from \"@SRC/utils/utilFuncs\";\nimport { createNewProduct } from \"@SRC/data/api.service\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\n\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    number: \"${label} is not a valid number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n/* eslint-enable no-template-curly-in-string */\n\nconst CreateNewItem = () => {\n  // useRef example usage as  refering an instance of a component\n  // 1st step: create a ref\n  const ref = useRef<FormInstance<any> | null>();\n  const [loadingStatus, setLoadingStatus] = React.useState(false);\n\n  const onFinish = (values: any) => {};\n\n  return (\n    <Form\n      {...layout}\n      name=\"product creation\"\n      onFinish={onFinish}\n      // validateMessages={validateMessages}\n      style={{ flex: 1 }}\n      //ref need to receive a instance of a component using a function to pass it into the current state of the ref.\n      ref={(formInstance: FormInstance<any> | null) => {\n        ref.current = formInstance;\n      }}>\n      <Form.Item\n        name={[\"product\", \"productType\"]}\n        label=\"Product Type\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Select\n          placeholder=\"Please select a Type\"\n          onChange={() => {\n            // console.log(ref.current?.getFieldValue(\"product\").productType)\n            setLoadingStatus(false);\n          }}>\n          {productTypes.map((type: { id: number; name: string }) => {\n            return (\n              <Select.Option key={type.id} value={type.name}>\n                {type.name}\n              </Select.Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productSubType\"]}\n        label=\"SubType\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Select placeholder=\"Please select SubType of the product\">\n          {subType.map((sub: any) => {\n            return (\n              <Select.Option key={sub.id} value={sub.name}>\n                {sub.name}\n              </Select.Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productDetail\"]}\n        label=\"Detail\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Select placeholder=\"Please select the detail definition\">\n          {details.map((detail) => {\n            return (\n              <Select.Option key={detail.id} value={detail.name}>\n                {detail.name}\n              </Select.Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productName\"]}\n        label=\"Product Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productSku\"]}\n        label=\"SKU\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productSize\"]}\n        label=\"Size\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productLength\"]}\n        label=\"Length\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productPrice\"]}\n        label=\"Price\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productPowderCoatingPrice\"]}\n        label=\"PowderCoatingPrice\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productPowderInstallationPrice\"]}\n        label=\"InstallationPrice\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item name={[\"product\", \"productDescription\"]} label=\"Description\">\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\n      </Form.Item>\n      <Form.Item name={[\"product\", \"productSpecification\"]} label=\"Specification\">\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button\n          type=\"primary\"\n          // htmlType=\"submit\"\n          block\n          style={{ marginBottom: \"1rem\" }}\n          loading={loadingStatus}\n          onClick={() => {\n            setLoadingStatus(true);\n            setTimeout(() => {\n              const currentFormValues = ref.current?.getFieldValue(\"product\");\n              const productPayload = {\n                subtype: currentFormValues.productSubType,\n                detail: currentFormValues.productDetail,\n                length: currentFormValues.productLength,\n                type: currentFormValues.productType,\n                name: currentFormValues.productName,\n                sku: currentFormValues.productSku,\n                size: currentFormValues.productSize,\n                price: currentFormValues.productPrice,\n                powdercoatingPrice: currentFormValues.productPowderCoatingPrice,\n                installationPrice: currentFormValues.productPowderInstallationPrice,\n                desc: currentFormValues.productDescription,\n                spec: currentFormValues.productSpecification,\n                currentInStock: 0,\n                updateLog: \"\",\n                lastUpdate: timeStamp(),\n              };\n              createNewProduct(productPayload);\n              setLoadingStatus(false);\n              ref.current?.resetFields();\n            }, 2000);\n          }}>\n          Submit\n        </Button>\n        <Button\n          onClick={() => {\n            ref.current?.resetFields();\n          }}\n          block>\n          Reset Form\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default CreateNewItem;\n","import React from \"react\"\n\nfunction useDebounce(state: any, delay: number) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = React.useState(state)\n\n  React.useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(state)\n      }, delay)\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    [state, delay] // Only re-call effect if value or delay changes\n  )\n  return debouncedValue\n}\n\nexport default useDebounce\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Form, Input, InputNumber, Button, FormInstance, Select, Typography } from \"antd\";\nimport Request from \"@DATA/api.controller\";\nimport qs from \"query-string\";\nimport { refineQueryString, QueryStringType } from \"@SRC/utils/utilFuncs\";\nimport useDebounce from \"@SRC/Hooks/useDebounce\";\nimport { productTypes, details, subType } from \"@SRC/utils/productTypes\";\nimport { getProductData, putProductData } from \"@SRC/data/api.service\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n};\n/* eslint-disable no-template-curly-in-string */\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    number: \"${label} is not a valid number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n/* eslint-enable no-template-curly-in-string */\n\nconst WarehousingAbolishForm = () => {\n  // useRef example usage as  refering an instance of a component\n  // 1st step: create a ref\n  const ref = useRef<FormInstance<any> | null>();\n\n  const onFinish = (values: any) => {};\n\n  const [isloading, setIsloading] = useState(false);\n  const [products, setProducts] = useState<any>([]);\n  const [searchParams, setSearchParams] = useState<QueryStringType>({\n    name: \"\",\n    sku: \"\",\n  });\n\n  const debouncedSearchParams = useDebounce(searchParams, 3000);\n\n  // const getProductData = async (queryData: { name?: string; sku?: string } = {}) => {\n  //   return await Request.get(`${env.dbUri}/products?${qs.stringify(refineQueryString(queryData))}`)\n  // }\n\n  // const putProductData = async (url: string, payload: object) => {\n  //   return await Request.put(`${env.dbUri}/products/${url}`, payload, \"Product\")\n  // }\n  // 生命周期hook执行，切记不是事件执行，依赖为啥叫依赖而不是监听源头，不是事件驱动的。\n  useEffect(() => {\n    // load the producData and productTypes on the first render and only load once\n\n    getProductData().then((response) => {\n      setProducts(response);\n    });\n  }, []);\n\n  return (\n    <Form\n      initialValues={{}}\n      {...layout}\n      name=\"nest-messages\"\n      onFinish={onFinish}\n      // validateMessages={validateMessages}\n      style={{ flex: 1 }} // flex: 1 的作用\n      //ref need to receive a instance of a component using a function to pass it into the current state of the ref.\n      ref={(formInstance: FormInstance<any> | null) => {\n        ref.current = formInstance;\n      }}>\n      <Form.Item label=\"Search for the Product\" style={{ marginBottom: 0 }}>\n        <Form.Item\n          name={[\"product\", \"productName\"]}\n          rules={[{ required: true }]}\n          style={{\n            display: \"inline-block\",\n            width: \"calc(50% - 8px)\",\n            paddingRight: \"5px\",\n          }}>\n          <Input\n            placeholder=\"Please Input the product name\"\n            onChange={() => {\n              let currentFormValue = ref.current?.getFieldValue(\"product\");\n              let queryData = {\n                name: currentFormValue.productName,\n              };\n              getProductData(queryData).then((response: any) => {\n                const { type, size, price, powdercoatingprice, currentInStock, sku, updateLog, spec, desc, installationprice } = response?.[0] || {};\n                // set FormFields\n                ref.current?.setFieldsValue({\n                  product: {\n                    ...currentFormValue,\n                    productType: type,\n                    productSku: sku,\n                    productUpdateLog: updateLog,\n                    productQuantityAdd: 0,\n                    productQuantityInstock: currentInStock,\n                    productSpecification: spec,\n                    productDescription: desc,\n                    productInstallationPrice: installationprice,\n                    productPowderCoatingPrice: powdercoatingprice,\n                    productPrice: price,\n                    productSize: size,\n                  },\n                });\n              });\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item name={[\"product\", \"productSku\"]} style={{ display: \"inline-block\", width: \"calc(50% - 8px)\" }}>\n          <Select\n            placeholder=\"Select Product from list\"\n            onChange={() => {\n              // 当select数据变化时，获得form表单的product的数据\n              let currentFormValue = ref.current?.getFieldValue(\"product\");\n              let queryData = {\n                sku: currentFormValue.productSku,\n              };\n              // 根据选择项的数据，进行请求\n              getProductData(queryData)\n                .then((response: any) => {\n                  console.log(response);\n                  const { type, name, size, price, powdercoatingprice, currentInStock, updateLog, spec, desc, installationprice } = response?.[0] || {};\n                  // 设置表单数据\n                  // setFieldsValue是底层包装了state，确保了表单刷新\n                  // 但是，setFieldsValue并不会引发当前组件的刷新\n                  // 表单是子组件\n                  // 子组件刷新不会引发父组件刷新\n                  // 当前组件是父组件，表单是子组件\n                  // setFieldsValue触发了表单的数显，即子组件的刷新，确保了表单项目显示正确\n                  // 当前组件不会刷新，也就不会出发useEffect\n                  ref.current?.setFieldsValue({\n                    product: {\n                      ...currentFormValue,\n                      productType: type,\n                      productName: name,\n                      productUpdateLog: updateLog,\n                      productQuantityAdd: 0,\n                      productQuantityInstock: currentInStock,\n                      productSpecification: spec,\n                      productDescription: desc,\n                      productInstallationPrice: installationprice,\n                      productPowderCoatingPrice: powdercoatingprice,\n                      productPrice: price,\n                      productSize: size,\n                    },\n                  });\n                })\n                .catch((error: any) => {\n                  throw new Error(error);\n                });\n            }}>\n            {products.map((product: any) => {\n              return (\n                <Select.Option value={product.sku} key={product.id}>\n                  {product.sku}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productType\"]}\n        label=\"Type\"\n        rules={[\n          {\n            required: false,\n            message: \"must provide product Type\",\n          },\n        ]}>\n        <Select\n          placeholder=\"Please select a Type\"\n          onChange={() => {\n            // console.log(ref.current?.getFieldValue(\"product\").productType)\n          }}>\n          {productTypes.map((type: { id: number; name: string }) => {\n            return (\n              <Select.Option key={type.id} value={type.name}>\n                {type.name}\n              </Select.Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productSubType\"]}\n        label=\"SubType\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Select placeholder=\"Please select SubType of the product\">\n          {subType.map((sub: any) => {\n            return (\n              <Select.Option key={sub.id} value={sub.name}>\n                {sub.name}\n              </Select.Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productDetail\"]}\n        label=\"Detail\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}>\n        <Select placeholder=\"Please select the detail definition\">\n          {details.map((detail) => {\n            return (\n              <Select.Option key={detail.id} value={detail.name}>\n                {detail.name}\n              </Select.Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productSku\"]}\n        label=\"SKU\"\n        rules={[\n          {\n            required: false,\n            message: \"must provide products SKU\",\n          },\n        ]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productQuantityEff\"]}\n        label=\"Quantity Effected\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productQuantityInstock\"]}\n        label=\"Quantity inStock\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n            max: 99999,\n          },\n        ]}>\n        <InputNumber disabled={true} />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productPrice\"]}\n        label=\"Product Price\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n            max: 99999,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productPowderCoatingPrice\"]}\n        label=\"Powder Coating Price\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n            max: 99999,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productInstallationPrice\"]}\n        label=\"Installation Price\"\n        rules={[\n          {\n            type: \"number\",\n            min: 0,\n            max: 99999,\n          },\n        ]}>\n        <InputNumber />\n      </Form.Item>\n      <Form.Item\n        name={[\"product\", \"productSize\"]}\n        label=\"Size\"\n        rules={[\n          {\n            required: false,\n          },\n        ]}>\n        <Input />\n      </Form.Item>\n      <Form.Item name={[\"product\", \"productDescription\"]} label=\"Description\">\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\n      </Form.Item>\n      <Form.Item name={[\"product\", \"productSpecification\"]} label=\"Specification\">\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\n      </Form.Item>\n      <Form.Item name={[\"product\", \"productUpdateLog\"]} label=\"Update Log\">\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button\n          type=\"primary\"\n          // htmlType=\"submit\"\n          block\n          style={{ marginBottom: \"1rem\" }}\n          onClick={() => {\n            setIsloading(true);\n            setTimeout(() => {\n              let { productQuantityAdd, productDescription } = ref.current?.getFieldValue(\"product\");\n              const currentProduct = products[0];\n              const targetId = currentProduct.id;\n              const payloadProduct = {\n                ...currentProduct,\n                currentInStock: currentProduct.currentInStock + productQuantityAdd,\n                updateLog: productDescription,\n              };\n              putProductData(targetId, payloadProduct).then((response) => {\n                console.log(`product ${response} is create.`);\n              });\n\n              setIsloading(false);\n              ref.current?.resetFields();\n            }, 2000);\n          }}>\n          Submit\n        </Button>\n        <Button\n          onClick={() => {\n            ref.current?.resetFields();\n          }}\n          block>\n          Reset Form\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default WarehousingAbolishForm;\n","import React, { useState } from \"react\"\nimport \"antd/dist/antd.css\"\nimport { Button } from \"antd\"\nimport WarehousingDepositeForm from \"@SRC/components/warehousing/DepositeIntoWarehouseForm\"\nimport CreateNewItem from \"@SRC/components/warehousing/CreateNewProducts\"\nimport WarehousingAbolishForm from \"@SRC/components/warehousing/AbolishProducts\"\nimport { stringify } from \"querystring\"\n\n/* eslint-disable no-template-curly-in-string */\n\n/* eslint-enable no-template-curly-in-string */\n\nconst WarehousingInbound = () => {\n  //selector init with default selection\n  const [selector, setSelector] = useState<{ select: string; activate: undefined | \"primary\" }>({ select: \"Deposite\", activate: undefined })\n\n  const formSelection = (selector: { select: string; activate: any }) => {\n    switch (selector.select) {\n      case \"Deposite\":\n        return <WarehousingDepositeForm />\n        break\n      case \"Create\":\n        return <CreateNewItem />\n        break\n      case \"Abolish\":\n        return <WarehousingAbolishForm />\n        break\n    }\n  }\n\n  return (\n    <div style={{ display: \"flex\", gap: \"20px 5rem\", alignItems: \"flex-start\", width: \"100%\" }}>\n      <div style={{ marginTop: \"5rem\", display: \"flex\", width: \"100%\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \" 2rem\" }}>\n          <h3>Please click to select operation </h3>\n          <Button\n            type={selector.select === \"Deposite\" ? \"primary\" : undefined}\n            onClick={() => {\n              setSelector({ ...selector, select: \"Deposite\" })\n            }}>\n            Deposite into the WareHouse\n          </Button>\n          <Button\n            type={selector.select === \"Create\" ? \"primary\" : undefined}\n            onClick={() => {\n              setSelector({ ...selector, select: \"Create\" })\n            }}>\n            Create New Product\n          </Button>\n          <Button\n            type={selector.select === \"Abolish\" ? \"primary\" : undefined}\n            onClick={() => {\n              setSelector({ ...selector, select: \"Abolish\" })\n            }}>\n            Abolish / Edit Product Info\n          </Button>\n        </div>\n        {formSelection(selector)}\n      </div>\n    </div>\n  )\n}\nexport default WarehousingInbound\n","export const details = [\n  {\n    id: 0,\n    name: \"no detail\",\n  },\n  {\n    id: 1,\n    name: \"sideOpen\",\n  },\n  {\n    id: 2,\n    name: \"sideOpen with Drawers\",\n  },\n  {\n    id: 3,\n    name: \"topOpen\",\n  },\n  {\n    id: 4,\n    name: \"caravan Toolbox\",\n  },\n  {\n    id: 5,\n    name: \"generator Toolbox\",\n  },\n  {\n    id: 6,\n    name: \"3/4 sideopen Toolbox\",\n  },\n  {\n    id: 7,\n    name: \"full sideopen Toolbox\",\n  },\n  {\n    id: 8,\n    name: \"full sideopen Toolbox with drawers\",\n  },\n  {\n    id: 9,\n    name: \"2 doors canopy\",\n  },\n  {\n    id: 10,\n    name: \"3 doors canopy\",\n  },\n];\n\n// SubType definition\n\nexport const subType = [\n  {\n    id: 0,\n    name: \"no subtype\",\n  },\n  {\n    id: 1,\n    name: \"dogbox\",\n  },\n  {\n    id: 2,\n    name: \"drawbar\",\n  },\n  {\n    id: 3,\n    name: \"gullwing\",\n  },\n  {\n    id: 4,\n    name: \"sideOpen Toolbox\",\n  },\n  {\n    id: 5,\n    name: \"topOpen Toolbox\",\n  },\n  {\n    id: 6,\n    name: \"underTray Toolbox\",\n  },\n  {\n    id: 7,\n    name: \"campers Toolbox\",\n  },\n  {\n    id: 8,\n    name: \"trundel drawer\",\n  },\n  {\n    id: 9,\n    name: \"tub Toolbox\",\n  },\n  {\n    id: 10,\n    name: \"partTray canopy\",\n  },\n  {\n    id: 11,\n    name: \"dualcab canopy\",\n  },\n  {\n    id: 12,\n    name: \"extracab canopy\",\n  },\n  {\n    id: 13,\n    name: \"singlecab canopy\",\n  },\n  {\n    id: 14,\n    name: \"dog canopy\",\n  },\n  {\n    id: 15,\n    name: \"1000H canopy\",\n  },\n  {\n    id: 16,\n    name: \"jackoff canopy\",\n  },\n];\n\nexport const productTypes = [\n  {\n    id: 1,\n    name: \"toolbox\",\n  },\n  {\n    id: 2,\n    name: \"canopy\",\n  },\n  {\n    id: 3,\n    name: \"tray\",\n  },\n  {\n    id: 4,\n    name: \"accessories\",\n  },\n  {\n    id: 5,\n    name: \"4x4\",\n  },\n  {\n    id: 6,\n    name: \"serviceBody\",\n  },\n  {\n    id: 7,\n    name: \"combo\",\n  },\n  {\n    id: 8,\n    name: \"tubCanopy\",\n  },\n];\n\nexport const orderStatus = [\n  {\n    id: 0,\n    name: \"pending\",\n  },\n  {\n    id: 1,\n    name: \"partiallyPayed\",\n  },\n  {\n    id: 2,\n    name: \"fullyPayed\",\n  },\n];\n\nexport const fabricationStatus = [\n  {\n    id: 0,\n    name: \"pending\",\n  },\n  {\n    id: 1,\n    name: \"machineProcessing\",\n  },\n  {\n    id: 2,\n    name: \"machineProcessFinished\",\n  },\n  {\n    id: 3,\n    name: \"powderCoating\",\n  },\n  {\n    id: 4,\n    name: \"powderCoatingFinished\",\n  },\n  {\n    id: 5,\n    name: \"waitingForInstallation\",\n  },\n  {\n    id: 6,\n    name: \"installing\",\n  },\n  {\n    id: 7,\n    name: \"ready\",\n  },\n];\n\nexport const logisticStatus = [\n  {\n    id: 0,\n    name: \"waitingForCarrier\",\n  },\n  {\n    id: 1,\n    name: \"delivering\",\n  },\n  {\n    id: 2,\n    name: \"delivered\",\n  },\n  {\n    id: 3,\n    name: \"cannotDeliver\",\n  },\n  {\n    id: 4,\n    name: \"returningToVender\",\n  },\n  {\n    id: 5,\n    name: \"returnedItemArrived\",\n  },\n  {\n    id: 6,\n    name: \"itemDamagedInTransport\",\n  },\n];\n\nexport const logisticProvider = [\n  {\n    id: 0,\n    name: \"Australian Post\",\n  },\n  {\n    id: 1,\n    name: \"Big Post\",\n  },\n  {\n    id: 2,\n    name: \"FastWay\",\n  },\n];\n"],"names":["layout","labelCol","span","wrapperCol","ref","useRef","currentProductRef","React","isloading","setIsloading","useState","products","setProducts","name","sku","useEffect","getProductDataDeposits","then","response","initialValues","onFinish","values","style","flex","formInstance","current","label","marginBottom","rules","required","display","width","paddingRight","onChange","currentFormValue","getFieldValue","queryData","productName","currentInStock","updateLog","setFieldsValue","product","productSku","productDescription","productQuantityAdd","productQuantityInstock","placeholder","catch","error","Error","map","value","id","message","type","min","max","disabled","minHeight","maxHeight","offset","loading","block","onClick","setTimeout","currentProduct","targetId","payloadProduct","putProductData","resetFields","loadingStatus","setLoadingStatus","productTypes","subType","sub","details","detail","currentFormValues","productPayload","subtype","productSubType","productDetail","length","productLength","productType","size","productSize","price","productPrice","powdercoatingPrice","productPowderCoatingPrice","installationPrice","productPowderInstallationPrice","desc","spec","productSpecification","lastUpdate","timeStamp","createNewProduct","state","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","searchParams","useDebounce","getProductData","powdercoatingprice","installationprice","productUpdateLog","productInstallationPrice","console","log","select","activate","undefined","selector","setSelector","gap","alignItems","marginTop","flexDirection","formSelection","orderStatus","fabricationStatus","logisticStatus","logisticProvider"],"sourceRoot":""}